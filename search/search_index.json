{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LIVING FOR TODAY pySatellite Simulate satellite tracking. It tells the story of space debris and satellite collisions. To Infinity, and Beyond! install pip install pySatellite use from pysatellite import Rocket from pysatellite import Satellite Rocket . launch () Satellite . coordinates () To Infinity, and Beyond!","title":"About"},{"location":"#living-for-today","text":"","title":"LIVING FOR TODAY"},{"location":"#pysatellite","text":"Simulate satellite tracking. It tells the story of space debris and satellite collisions. To Infinity, and Beyond!","title":"pySatellite"},{"location":"#install","text":"pip install pySatellite","title":"install"},{"location":"#use","text":"from pysatellite import Rocket from pysatellite import Satellite Rocket . launch () Satellite . coordinates () To Infinity, and Beyond!","title":"use"},{"location":"contributhon/","text":"How to contribute First, try to make it move in your environment. And if there's anything interesting to add, start with the issue. Right here - good first issue Then you'll be with us. Make a rolling wheel Bursting - Code & Environment git clone https://github.com/pySatellite/pySatellite.github.io.git $ cd pySatellite.github.io # Use it optionally. If you're already on top of another Python environment, you can get out. $ deactivate $ pip install pipenv $ pipenv shell ( pySatellite.github.io ) $ pipenv install # \uc790 \uc774\uc81c \uae68\ub057\ud55c \ud30c\uc774\uc36c \uac00\uc0c1 \uac1c\ubc1c\ud658\uacbd \uc704\uc5d0 pySatellie \uac1c\ubc1c\uc5d0 \ud544\uc694\ud55c \ubaa8\ub4c8\uc774 \uc124\uce58 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. # Now, on top of a clean Python virtual development environment, the modules needed for pySatellie development are installed. Build & Install python3 -m build pip install . Test ( pySatellite.github.io ) $ pipenv install --dev ( pySatellite.github.io ) $ sh test.sh sh test.sh ========== test session starts ========== platform darwin -- Python 3 .6.12, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 rootdir: /Users/diginori/myhub/pySatellite.github.io/tests, configfile: ../pytest.ini plugins: cov-2.12.1 collected 2 items tests/pysatellite/test_rocket.py . [ 50 % ] tests/pysatellite/test_satellite.py . [ 100 % ] -------------------------- generated xml file: /Users/diginori/myhub/pySatellite.github.io/report/test/tests.xml -------------------------- ---------- coverage: platform darwin, python 3 .6.12-final-0 ---------- Name Stmts Miss Cover --------------------------- --------------------------- TOTAL 7 0 100 % 2 files skipped due to complete coverage. Coverage XML written to file report/coverage/coverage.xml ========== 2 passed in 10 .14s ========== Documentation Create a documentation website by automatically reading the Google-style docstring written in the code. Make sure that the module you added or modified has an appropriate explanation. \ucf54\ub4dc\uc5d0 \uc791\uc131\ub41c \uad6c\uae00 \uc2a4\ud0c0\uc77c docstring \uc744 \uc790\ub3d9\uc73c\ub85c \uc77d\uc5b4 \ubb38\uc11c\ud654 \uc6f9\uc0ac\uc774\ud2b8\ub97c \ub9cc\ub4e4\uc5b4 \ub0c5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud55c \ubaa8\ub4c8\uc5d0 \uc801\uc808\ud55c \uc124\uba85\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. mkdocs serve # Serving on http://127.0.0.1:8000/","title":"How to contribute"},{"location":"contributhon/#how-to-contribute","text":"First, try to make it move in your environment. And if there's anything interesting to add, start with the issue. Right here - good first issue Then you'll be with us.","title":"How to contribute"},{"location":"contributhon/#make-a-rolling-wheel","text":"","title":"Make a rolling wheel"},{"location":"contributhon/#bursting-code-environment","text":"git clone https://github.com/pySatellite/pySatellite.github.io.git $ cd pySatellite.github.io # Use it optionally. If you're already on top of another Python environment, you can get out. $ deactivate $ pip install pipenv $ pipenv shell ( pySatellite.github.io ) $ pipenv install # \uc790 \uc774\uc81c \uae68\ub057\ud55c \ud30c\uc774\uc36c \uac00\uc0c1 \uac1c\ubc1c\ud658\uacbd \uc704\uc5d0 pySatellie \uac1c\ubc1c\uc5d0 \ud544\uc694\ud55c \ubaa8\ub4c8\uc774 \uc124\uce58 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. # Now, on top of a clean Python virtual development environment, the modules needed for pySatellie development are installed.","title":"Bursting - Code &amp; Environment"},{"location":"contributhon/#build-install","text":"python3 -m build pip install .","title":"Build &amp; Install"},{"location":"contributhon/#test","text":"( pySatellite.github.io ) $ pipenv install --dev ( pySatellite.github.io ) $ sh test.sh sh test.sh ========== test session starts ========== platform darwin -- Python 3 .6.12, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 rootdir: /Users/diginori/myhub/pySatellite.github.io/tests, configfile: ../pytest.ini plugins: cov-2.12.1 collected 2 items tests/pysatellite/test_rocket.py . [ 50 % ] tests/pysatellite/test_satellite.py . [ 100 % ] -------------------------- generated xml file: /Users/diginori/myhub/pySatellite.github.io/report/test/tests.xml -------------------------- ---------- coverage: platform darwin, python 3 .6.12-final-0 ---------- Name Stmts Miss Cover --------------------------- --------------------------- TOTAL 7 0 100 % 2 files skipped due to complete coverage. Coverage XML written to file report/coverage/coverage.xml ========== 2 passed in 10 .14s ==========","title":"Test"},{"location":"contributhon/#documentation","text":"Create a documentation website by automatically reading the Google-style docstring written in the code. Make sure that the module you added or modified has an appropriate explanation. \ucf54\ub4dc\uc5d0 \uc791\uc131\ub41c \uad6c\uae00 \uc2a4\ud0c0\uc77c docstring \uc744 \uc790\ub3d9\uc73c\ub85c \uc77d\uc5b4 \ubb38\uc11c\ud654 \uc6f9\uc0ac\uc774\ud2b8\ub97c \ub9cc\ub4e4\uc5b4 \ub0c5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud55c \ubaa8\ub4c8\uc5d0 \uc801\uc808\ud55c \uc124\uba85\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. mkdocs serve # Serving on http://127.0.0.1:8000/","title":"Documentation"},{"location":"docs-pysatellite/","text":"pysatellite package is Simulate satellite tracking. cli cli_where_are_you_now () \uc778\uacf5\uc704\uc131\uc758 \ud604 \uc704\uce58 \uc815\ubcf4\ub4f1\uc744 \uc218\uc2e0 API_KEY \ub294 https://www.n2yo.com/api/ \uc5d0\uc11c \ubc1c\uae09 Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> pySatellite - where - are - you - now 1 InvalidAPIKey { \"error\" : \"Invalid API Key!\" } >>> pySatellite - where - are - you - now 1 **-****-***-**** { \"info\" : { \"satname\" : \"SL-1 R/B\" , \"satid\" : 1 , \"transactionscount\" : 11 }, \"positions\" : [{ \"satlatitude\" : 0 , \"satlongitude\" : 0 , \"sataltitude\" : 0 , \"azimuth\" : 0 , \"elevation\" : 0 , \"ra\" : 0 , \"dec\" : 0 , \"timestamp\" : 0 , \"eclipsed\" : false }]} Source code in pysatellite/cli.py def cli_where_are_you_now (): \"\"\"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc704\uce58 \uc815\ubcf4\ub4f1\uc744 \uc218\uc2e0 API_KEY \ub294 https://www.n2yo.com/api/ \uc5d0\uc11c \ubc1c\uae09 Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> pySatellite-where-are-you-now 1 InvalidAPIKey {\"error\": \"Invalid API Key!\"} >>> pySatellite-where-are-you-now 1 **-****-***-**** {\"info\": {\"satname\": \"SL-1 R/B\", \"satid\": 1, \"transactionscount\": 11}, \"positions\": [{\"satlatitude\": 0, \"satlongitude\": 0, \"sataltitude\": 0, \"azimuth\": 0, \"elevation\": 0, \"ra\": 0, \"dec\": 0, \"timestamp\": 0, \"eclipsed\": false}]} Returns: \"\"\" satellite_id = sys . argv [ 1 ] api_key = sys . argv [ 2 ] d = where_are_you_now ( satellite_id , api_key ) return json . dumps ( d ) ping () \uc0b4\uc558\ub2c8~ \uc8fd\uc5c8\ub2c8? Source code in pysatellite/cli.py def ping () -> str : \"\"\"\uc0b4\uc558\ub2c8~ \uc8fd\uc5c8\ub2c8?\"\"\" return 'pong' what_are_you_doing () \uc9c0\uae08 \ubb50\ud558\uace0 \uc788\ub294\uc9c0 \ubb3b\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\uc744\ud568 Returns: Type Description str \ube14\ub77c\ube14\ub77c~ Todo \uc678\uacc4\uc5b4 \uc9c0\uc6d0 \uc554\ud638\ubb38 \uc804\uc1a1 \uc554\ud638\ud654 \ucc98\ub9ac \ud6c4 \ud68c\uc2e0 Source code in pysatellite/cli.py def what_are_you_doing () -> str : \"\"\"\uc9c0\uae08 \ubb50\ud558\uace0 \uc788\ub294\uc9c0 \ubb3b\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\uc744\ud568 Returns: \ube14\ub77c\ube14\ub77c~ Todo: - \uc678\uacc4\uc5b4 \uc9c0\uc6d0 - \uc554\ud638\ubb38 \uc804\uc1a1 - \uc554\ud638\ud654 \ucc98\ub9ac \ud6c4 \ud68c\uc2e0 \"\"\" \ub300\ub2f5_\ubb49\uce58 = [ \"It's circling around the Earth. Oh! I'm dizzy.\" , \"\uc787\uc2a4 \uc11c\uceec\ub9c1 \uc5b4\ub77c\uc6b4\ub4dc \ub514 \uc774\uc5d0\uc584\ud2f0\uc5d0\uc774\uce58 \uc624\uc6b0 \uc544\uc784 \ub514\uc9c0.\" , \"\uc9c0\uad6c \uc8fc\uc704\ub97c \ub3cc\uace0 \uc788\uc5b4. \uc624! \uc5b4\uc9c0\ub7fd\ub2e4.\" , \"wlrn wndnlfmf ehfrh dlTdj. dh! djwlfjqek.\" ] return random . choice ( \ub300\ub2f5_\ubb49\uce58 ) where_are_you_now ( satellite_id , api_key , observer_lat = 37.44 , observer_lng = 126.96 , observer_alt = 592.0 , seconds = 1 ) \uc778\uacf5\uc704\uc131\uc758 \uc704\ub3c4,\uacbd\ub3c4,\uace0\ub3c4 \ub4f1\uc758 \uc815\ubcf4 \uc218\uc2e0 Parameters: Name Type Description Default satellite_id int \uc778\uacf5\uc704\uc131 \uc2dd\ubcc4 id required api_key str api key required observer_lat Observer's latitide (decimal degrees format) 37.44 observer_lng Observer's longitude (decimal degrees format) 126.96 observer_alt Observer's altitude above sea level in meters 592.0 seconds Number of future positions to return. Each second is a position. Limit 300 seconds 1 Returns: Type Description dict https://www.n2yo.com/api/#positions Source code in pysatellite/cli.py def where_are_you_now ( satellite_id : int , api_key : str , observer_lat = 37.44 , observer_lng = 126.96 , observer_alt = 592.0 , seconds = 1 ) -> dict : \"\"\"\uc778\uacf5\uc704\uc131\uc758 \uc704\ub3c4,\uacbd\ub3c4,\uace0\ub3c4 \ub4f1\uc758 \uc815\ubcf4 \uc218\uc2e0 Args: satellite_id: \uc778\uacf5\uc704\uc131 \uc2dd\ubcc4 id api_key: api key observer_lat: Observer's latitide (decimal degrees format) observer_lng: Observer's longitude (decimal degrees format) observer_alt: Observer's altitude above sea level in meters seconds: Number of future positions to return. Each second is a position. Limit 300 seconds Returns: https://www.n2yo.com/api/#positions \"\"\" URL = \"https://api.n2yo.com/rest/v1/satellite/positions\" api = f \" { URL } / { satellite_id } / { observer_lat } / { observer_lng } / { observer_alt } / { seconds } /&apiKey= { api_key } \" res = requests . get ( api ) json_dict = res . json () return json_dict rocket \uc778\uacf5\uc704\uc131 \ubc1c\uc0ac \uc704\ud55c \ub85c\ucf13 \ubaa8\ub4c8 Rocket \uc778\uacf5\uc704\uc131\uc744 \uada4\ub3c4\uc5d0 \uc9c4\uc785 \uc2dc\ud0a4\uae30 \uc704\ud55c \ub85c\ucf13 countdown () staticmethod \ub85c\ucf13 \ubc1c\uc0ac \uce74\uc6b4\ud2b8 \ub2e4\uc6b4 Todo https://www.nasa.gov/mission_pages/shuttle/launch/countdown101.html Source code in pysatellite/rocket.py @staticmethod def countdown (): \"\"\"\ub85c\ucf13 \ubc1c\uc0ac \uce74\uc6b4\ud2b8 \ub2e4\uc6b4 Todo: * https://www.nasa.gov/mission_pages/shuttle/launch/countdown101.html \"\"\" for i in range ( COUNTDOWN_START , 0 , - 1 ): print ( i ) time . sleep ( COUNTDOWN_SLEEP_SECS ) launch () staticmethod countdown & launch To use: >>> Rocket.launch() 9 ... 1 rocket booster ignition and liftoff! Source code in pysatellite/rocket.py @staticmethod def launch (): \"\"\"countdown & launch To use: >>> Rocket.launch() 9 ... 1 rocket booster ignition and liftoff! \"\"\" Rocket . countdown () print ( \"rocket booster ignition and liftoff!\" ) satellite \uc778\uacf5\uc704\uc131 \uc6b4\uc601\uc744 \uc704\ud55c \ubaa8\ub4c8 Satellite \uc9c0\uad6c \uada4\ub3c4\ub97c \ub3cc\uba70 \uc784\ubb34\ub97c \uc218\ud589\ud558\ub294 \uc778\uacf5\uc704\uc131 coordinates () staticmethod \uc778\uacf5\uc704\uc131\uc758 \ud604 \uc88c\ud45c To use: >>> Satellite.coordinates() I don't know yet. Todo https://gssc.esa.int/navipedia/index.php/Satellite_Coordinates Source code in pysatellite/satellite.py @staticmethod def coordinates () -> str : \"\"\"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc88c\ud45c To use: >>> Satellite.coordinates() I don't know yet. Todo: * https://gssc.esa.int/navipedia/index.php/Satellite_Coordinates \"\"\" return \"I don't know yet.\"","title":"pysatellite"},{"location":"docs-pysatellite/#pysatellite.cli","text":"","title":"cli"},{"location":"docs-pysatellite/#pysatellite.cli.cli_where_are_you_now","text":"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc704\uce58 \uc815\ubcf4\ub4f1\uc744 \uc218\uc2e0 API_KEY \ub294 https://www.n2yo.com/api/ \uc5d0\uc11c \ubc1c\uae09 Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> pySatellite - where - are - you - now 1 InvalidAPIKey { \"error\" : \"Invalid API Key!\" } >>> pySatellite - where - are - you - now 1 **-****-***-**** { \"info\" : { \"satname\" : \"SL-1 R/B\" , \"satid\" : 1 , \"transactionscount\" : 11 }, \"positions\" : [{ \"satlatitude\" : 0 , \"satlongitude\" : 0 , \"sataltitude\" : 0 , \"azimuth\" : 0 , \"elevation\" : 0 , \"ra\" : 0 , \"dec\" : 0 , \"timestamp\" : 0 , \"eclipsed\" : false }]} Source code in pysatellite/cli.py def cli_where_are_you_now (): \"\"\"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc704\uce58 \uc815\ubcf4\ub4f1\uc744 \uc218\uc2e0 API_KEY \ub294 https://www.n2yo.com/api/ \uc5d0\uc11c \ubc1c\uae09 Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> pySatellite-where-are-you-now 1 InvalidAPIKey {\"error\": \"Invalid API Key!\"} >>> pySatellite-where-are-you-now 1 **-****-***-**** {\"info\": {\"satname\": \"SL-1 R/B\", \"satid\": 1, \"transactionscount\": 11}, \"positions\": [{\"satlatitude\": 0, \"satlongitude\": 0, \"sataltitude\": 0, \"azimuth\": 0, \"elevation\": 0, \"ra\": 0, \"dec\": 0, \"timestamp\": 0, \"eclipsed\": false}]} Returns: \"\"\" satellite_id = sys . argv [ 1 ] api_key = sys . argv [ 2 ] d = where_are_you_now ( satellite_id , api_key ) return json . dumps ( d )","title":"cli_where_are_you_now()"},{"location":"docs-pysatellite/#pysatellite.cli.ping","text":"\uc0b4\uc558\ub2c8~ \uc8fd\uc5c8\ub2c8? Source code in pysatellite/cli.py def ping () -> str : \"\"\"\uc0b4\uc558\ub2c8~ \uc8fd\uc5c8\ub2c8?\"\"\" return 'pong'","title":"ping()"},{"location":"docs-pysatellite/#pysatellite.cli.what_are_you_doing","text":"\uc9c0\uae08 \ubb50\ud558\uace0 \uc788\ub294\uc9c0 \ubb3b\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\uc744\ud568 Returns: Type Description str \ube14\ub77c\ube14\ub77c~ Todo \uc678\uacc4\uc5b4 \uc9c0\uc6d0 \uc554\ud638\ubb38 \uc804\uc1a1 \uc554\ud638\ud654 \ucc98\ub9ac \ud6c4 \ud68c\uc2e0 Source code in pysatellite/cli.py def what_are_you_doing () -> str : \"\"\"\uc9c0\uae08 \ubb50\ud558\uace0 \uc788\ub294\uc9c0 \ubb3b\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\uc744\ud568 Returns: \ube14\ub77c\ube14\ub77c~ Todo: - \uc678\uacc4\uc5b4 \uc9c0\uc6d0 - \uc554\ud638\ubb38 \uc804\uc1a1 - \uc554\ud638\ud654 \ucc98\ub9ac \ud6c4 \ud68c\uc2e0 \"\"\" \ub300\ub2f5_\ubb49\uce58 = [ \"It's circling around the Earth. Oh! I'm dizzy.\" , \"\uc787\uc2a4 \uc11c\uceec\ub9c1 \uc5b4\ub77c\uc6b4\ub4dc \ub514 \uc774\uc5d0\uc584\ud2f0\uc5d0\uc774\uce58 \uc624\uc6b0 \uc544\uc784 \ub514\uc9c0.\" , \"\uc9c0\uad6c \uc8fc\uc704\ub97c \ub3cc\uace0 \uc788\uc5b4. \uc624! \uc5b4\uc9c0\ub7fd\ub2e4.\" , \"wlrn wndnlfmf ehfrh dlTdj. dh! djwlfjqek.\" ] return random . choice ( \ub300\ub2f5_\ubb49\uce58 )","title":"what_are_you_doing()"},{"location":"docs-pysatellite/#pysatellite.cli.where_are_you_now","text":"\uc778\uacf5\uc704\uc131\uc758 \uc704\ub3c4,\uacbd\ub3c4,\uace0\ub3c4 \ub4f1\uc758 \uc815\ubcf4 \uc218\uc2e0 Parameters: Name Type Description Default satellite_id int \uc778\uacf5\uc704\uc131 \uc2dd\ubcc4 id required api_key str api key required observer_lat Observer's latitide (decimal degrees format) 37.44 observer_lng Observer's longitude (decimal degrees format) 126.96 observer_alt Observer's altitude above sea level in meters 592.0 seconds Number of future positions to return. Each second is a position. Limit 300 seconds 1 Returns: Type Description dict https://www.n2yo.com/api/#positions Source code in pysatellite/cli.py def where_are_you_now ( satellite_id : int , api_key : str , observer_lat = 37.44 , observer_lng = 126.96 , observer_alt = 592.0 , seconds = 1 ) -> dict : \"\"\"\uc778\uacf5\uc704\uc131\uc758 \uc704\ub3c4,\uacbd\ub3c4,\uace0\ub3c4 \ub4f1\uc758 \uc815\ubcf4 \uc218\uc2e0 Args: satellite_id: \uc778\uacf5\uc704\uc131 \uc2dd\ubcc4 id api_key: api key observer_lat: Observer's latitide (decimal degrees format) observer_lng: Observer's longitude (decimal degrees format) observer_alt: Observer's altitude above sea level in meters seconds: Number of future positions to return. Each second is a position. Limit 300 seconds Returns: https://www.n2yo.com/api/#positions \"\"\" URL = \"https://api.n2yo.com/rest/v1/satellite/positions\" api = f \" { URL } / { satellite_id } / { observer_lat } / { observer_lng } / { observer_alt } / { seconds } /&apiKey= { api_key } \" res = requests . get ( api ) json_dict = res . json () return json_dict","title":"where_are_you_now()"},{"location":"docs-pysatellite/#pysatellite.rocket","text":"\uc778\uacf5\uc704\uc131 \ubc1c\uc0ac \uc704\ud55c \ub85c\ucf13 \ubaa8\ub4c8","title":"rocket"},{"location":"docs-pysatellite/#pysatellite.rocket.Rocket","text":"\uc778\uacf5\uc704\uc131\uc744 \uada4\ub3c4\uc5d0 \uc9c4\uc785 \uc2dc\ud0a4\uae30 \uc704\ud55c \ub85c\ucf13","title":"Rocket"},{"location":"docs-pysatellite/#pysatellite.rocket.Rocket.countdown","text":"\ub85c\ucf13 \ubc1c\uc0ac \uce74\uc6b4\ud2b8 \ub2e4\uc6b4 Todo https://www.nasa.gov/mission_pages/shuttle/launch/countdown101.html Source code in pysatellite/rocket.py @staticmethod def countdown (): \"\"\"\ub85c\ucf13 \ubc1c\uc0ac \uce74\uc6b4\ud2b8 \ub2e4\uc6b4 Todo: * https://www.nasa.gov/mission_pages/shuttle/launch/countdown101.html \"\"\" for i in range ( COUNTDOWN_START , 0 , - 1 ): print ( i ) time . sleep ( COUNTDOWN_SLEEP_SECS )","title":"countdown()"},{"location":"docs-pysatellite/#pysatellite.rocket.Rocket.launch","text":"countdown & launch To use: >>> Rocket.launch() 9 ... 1 rocket booster ignition and liftoff! Source code in pysatellite/rocket.py @staticmethod def launch (): \"\"\"countdown & launch To use: >>> Rocket.launch() 9 ... 1 rocket booster ignition and liftoff! \"\"\" Rocket . countdown () print ( \"rocket booster ignition and liftoff!\" )","title":"launch()"},{"location":"docs-pysatellite/#pysatellite.satellite","text":"\uc778\uacf5\uc704\uc131 \uc6b4\uc601\uc744 \uc704\ud55c \ubaa8\ub4c8","title":"satellite"},{"location":"docs-pysatellite/#pysatellite.satellite.Satellite","text":"\uc9c0\uad6c \uada4\ub3c4\ub97c \ub3cc\uba70 \uc784\ubb34\ub97c \uc218\ud589\ud558\ub294 \uc778\uacf5\uc704\uc131","title":"Satellite"},{"location":"docs-pysatellite/#pysatellite.satellite.Satellite.coordinates","text":"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc88c\ud45c To use: >>> Satellite.coordinates() I don't know yet. Todo https://gssc.esa.int/navipedia/index.php/Satellite_Coordinates Source code in pysatellite/satellite.py @staticmethod def coordinates () -> str : \"\"\"\uc778\uacf5\uc704\uc131\uc758 \ud604 \uc88c\ud45c To use: >>> Satellite.coordinates() I don't know yet. Todo: * https://gssc.esa.int/navipedia/index.php/Satellite_Coordinates \"\"\" return \"I don't know yet.\"","title":"coordinates()"}]}